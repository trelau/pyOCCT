name: Workflow
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  release:
    types: [published]

jobs:
  generate_linux:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Generate (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
    steps:

      - name: "Install OpenGL"
        run: |
          sudo apt-get update
          sudo apt-get -q -y install libglu1-mesa-dev libgl1-mesa-dev libxi-dev libglfw3-dev libgles2-mesa-dev
      
      - name: "Prepare VM"
        run: |
          sudo rm -Rf /home/linuxbrew/

      - name: "Clone pyOCCT"
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: "Configure conda"
        shell: pwsh
        run: |
          conda init --all
          conda env create -f binder/environment.yml

      - name: "Check conda"
        shell: pwsh
        run: |
          conda activate binder
          conda info -a
          conda list

      - name: "Generate bindings"
        shell: pwsh
        run: |
          conda activate binder
          python binder/run.py -c binder/config.txt -o src

      - name: "Upload bindings"
        uses: actions/upload-artifact@v2
        with:
          name: pyocct_src_${{ matrix.os }}
          path: src

  generate_win:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Generate (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest']
    steps:

      - name: "Clone pyOCCT"
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: "Add conda to PATH"
        shell: bash -l {0}
        run: echo "$CONDA/Scripts" >> $GITHUB_PATH

      - name: "Configure conda"
        shell: bash -l {0}
        run: |
          conda init --all
          conda env create -f binder/environment.yml

      - name: "Check conda"
        shell: bash -l {0}
        run: |
          conda activate binder
          conda info -a
          conda list

      - name: "Generate bindings"
        shell: bash -l {0}
        run: |
          conda activate binder
          python binder/run.py -c binder/config.txt -o src

      - name: "Upload bindings"
        uses: actions/upload-artifact@v2
        with:
          name: pyocct_src_${{ matrix.os }}
          path: src

  build_linux:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Build (${{ matrix.python-version }}, ${{ matrix.os }})
    needs: generate_linux
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.6', '3.7', '3.8', '3.9']
    steps:

      - name: "Install OpenGL"
        run: |
          sudo apt-get update
          sudo apt-get -q -y install libglu1-mesa-dev libgl1-mesa-dev libxi-dev libglfw3-dev libgles2-mesa-dev
      
      - name: "Prepare VM"
        run: sudo rm -Rf /home/linuxbrew/
      
      - name: "Clone pyOCCT"
        uses: actions/checkout@v2

      - name: "Install conda build"
        shell: pwsh
        run: conda install -c conda-forge conda-build

      - name: "Check conda"
        shell: pwsh
        run: |
          conda info -a
          conda list

      - name: "Download binding sources"
        uses: actions/download-artifact@v2
        with:
          name: pyocct_src_${{ matrix.os }}
          path: src

      - name: "Run conda build"
        shell: pwsh
        run: |
          mkdir conda
          conda build  ci/conda -c conda-forge --python ${{ matrix.python-version }} --output-folder conda

      - name: "Upload conda package"
        uses: actions/upload-artifact@v2
        with:
          name: pyocct-py${{ matrix.python-version }}_${{ matrix.os }}
          path: conda

  build_win:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Build (${{ matrix.python-version }}, ${{ matrix.os }})
    needs: generate_win
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['windows-latest']
        python-version: ['3.6', '3.7', '3.8', '3.9']
    steps:

      - name: "Clone pyOCCT"
        uses: actions/checkout@v2

      - name: "Add conda to PATH"
        shell: bash -l {0}
        run: echo "$CONDA/Scripts" >> $GITHUB_PATH

      - name: "Install conda build"
        shell: bash -l {0}
        run: conda install -c conda-forge conda-build

      - name: "Check conda"
        shell: bash -l {0}
        run: |
          conda info -a
          conda list

      - name: "Download binding sources"
        uses: actions/download-artifact@v2
        with:
          name: pyocct_src_${{ matrix.os }}
          path: src

      - name: "Run conda build"
        shell: bash -l {0}
        run: |
          mkdir conda
          source activate
          conda build  ci/conda -c conda-forge --python ${{ matrix.python-version }} --output-folder conda

      - name: "Upload conda package"
        uses: actions/upload-artifact@v2
        with:
          name: pyocct-py${{ matrix.python-version }}_${{ matrix.os }}
          path: conda

  generate_macos:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Generate (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['macos-latest']
    steps:

      - name: "Clone pyOCCT"
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: "Add conda to PATH"
        run: echo "$CONDA/bin" >> $GITHUB_PATH

      - name: "MacOS fix"
        run: sudo chown -R $USER $CONDA

      - name: "Configure conda"
        shell: pwsh
        run: |
          conda init --all
          conda env create -f binder/environment.yml

      - name: "Check conda"
        shell: pwsh
        run: |
          conda activate binder
          conda info -a
          conda list

      - name: "Set SDKROOT"
        run: echo "SDKROOT=$(xcrun --show-sdk-path)" >> $GITHUB_ENV

      - name: "Generate bindings"
        shell: pwsh
        run: |
          conda activate binder
          python binder/run.py -c binder/config.txt -o src

      - name: "Upload bindings"
        uses: actions/upload-artifact@v2
        with:
          name: pyocct_src_${{ matrix.os }}
          path: src

  build_macos:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Build (${{ matrix.python-version }}, ${{ matrix.os }})
    needs: generate_macos
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['macos-latest']
        python-version: ['3.6', '3.7', '3.8', '3.9']
    steps:

      - name: "Install OpenGL"
        run: |
          sudo apt-get update
          sudo apt-get -q -y install libglu1-mesa-dev libgl1-mesa-dev libxi-dev libglfw3-dev libgles2-mesa-dev

      - name: "Clone pyOCCT"
        uses: actions/checkout@v2

      - name: "Add conda to PATH"
        run: echo "$CONDA/bin" >> $GITHUB_PATH

      - name: "MacOS fix"
        run: |
          sudo chown -R $USER $CONDA
          curl -o  MacOSX10.9.sdk.tar.xz -L https://github.com/phracker/MacOSX-SDKs/releases/download/10.15/MacOSX10.9.sdk.tar.xz
          tar xf MacOSX10.9.sdk.tar.xz
          sudo mv -v MacOSX10.9.sdk /Applications/Xcode_12.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/

      - name: "Configure conda"
        shell: pwsh
        run: conda init --all

      - name: "Install conda build"
        shell: pwsh
        run: conda install -c conda-forge conda-build

      - name: "Check conda"
        shell: pwsh
        run: |
          conda info -a
          conda list

      - name: "Download binding sources"
        uses: actions/download-artifact@v2
        with:
          name: pyocct_src_${{ matrix.os }}
          path: src/occt

      - name: "Run conda build"
        shell: pwsh
        run: |
          mkdir conda
          conda activate
          conda build  ci/conda -c conda-forge --python ${{ matrix.python-version }} --output-folder conda

      - name: "Upload conda package"
        uses: actions/upload-artifact@v2
        with:
          name: pyocct-py${{ matrix.python-version }}_${{ matrix.os }}
          path: conda
